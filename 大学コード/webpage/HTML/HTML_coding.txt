・コメントアウト-> <!-- ~~ -->
・ 見出し-> <heading> ~~ </heading>
            heading1,heading2,heading3で大見出し、中見出し、小見出しに対応(6段階)
・段落-> <paragraph> ~~ <paragraph>
・コード省略-> heading1をh1,paragraphをp1で省略可
・基本的に<(要素名)開始タグ>　(要素)　<(要素名)終了タグ>　で構成
・全体構造->    <html>
                    <head>
                        <title>(ページのタイトル)</title>
                    </head>
                    <body>
                        (ページ内容)
                    </body>
                </html>
            html文章であることを表し、headでページ内容を表す。これは画面表示されない
            bodyは画面出力される部分。titileがタイトル
・文字化け->HTMLcode内の文字コードをHTMLタグで指定すれば文字化け起こらない 
            head要素内に<meta>タグ用いて追記。
            metaタグは要素内容がないので終了タグ不要　
            ex. <meta charset="UTF-8">　(Shift_JIS,EUC-JP ect...)
・インデント型ではない(ただちゃんとコーディングする)
・Chromeでサイト開いて検証するとHTMLとCSSのコード見れる
・bodyの中に見出し、見出しh1~h6の中に段落pを入れる
・特殊入力-> 文字参照といい、&~~;でコード
            ex. < &lt;
                > &gt;
                " &quot;
                & &amp;
                © &copy;
                ¥ &yen;


<属性>
    <(要素名)　(属性名)=("属性値")>
    ・複数指定可、スペース区切り
    ・html要素はlnag属性の指定可、要素内の言語の指定 ex.<html lang="ja">
    ・グローバル属性->どの要素にも指定可  ex.id->固有名詞
                                        class->分類名
                                        title->補足情報 
                                        lang->言語
    ・その他の属性リンク:https://creatorquest.jp/reference/html/global-attributes/


<バージョン>
・2022最新HTML Living Standard(XHTML) (2021から、それまではhtml5)
・DOCTYPE宣言でバージョン指定->この宣言ないと、互換モード。CSSのデザイン崩れる可能性有
                                　宣言有で標準準拠モード
・最新バージョンのコーディングなら指定しなくてもいいがCSSとのリンクのため宣言するべき
  ex.<!DOCTYPE html>
     <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
     "http://www.w3.org/TR/html4/frameset.dtd">


<コンテンツ・モデル>
・要素リファレンス一覧リンク:https://creatorquest.jp/reference/html/element/
・要素の中に要素を配置できるかどうか、主従関係の整合性とることが大事(少しずつ覚える)
ex. <p>伝説のWebクリエーターに、<em>おれ</em>はなる</p>  これはok

    <カテゴリ(コンテンツ)>
    ・メタデータ・コンテンツ->メタデータ、CSS、JSを指定するもの
    ・フロー・コンテンツ->body要素内なら配置可
    ・セクショニング・コンテンツ->アウトライン
    ・ヘディング・コンテンツ->見出し、h1~h6のみ
    ・フレージング・コンテンツ->ドキュメントのテキスト範囲
    ・エンベディッド・コンテンツ->外部リソース、多言語によるコンテンツ
    ・インタラクティブ・コンテンツ->ユーザ操作関連


    <配置ルール>
    ・あるカテゴリ内の要素はそのカテゴリに属する要素のみ記述可
    ・トランスペアレント(透明)は囲まれてる親のコンテンツモデルと同じ









